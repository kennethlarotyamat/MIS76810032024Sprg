/*		
		Author's Name: 		    	Kenneth Larot Yamat

     	Purpose of Program:			To create a program that automatically creates
									trading tickets for a security, for example, buy 
									and sell orders for shares of an exchange traded fund.
     						    	 
  		Date Due:					11:59 PM on March 4th, 2024
*/

Project Proposal:		To create a program that automatically creates
						trading tickets for a security, for example, buy 
						and sell orders for shares of an exchange traded fund.
						
						A user would only manually enter the first order, either to 
						buy or sell a security, the program would populate and submit 
						a new ticket based on the fulfillment of the previous ticket, 
						the chain of tickets would continue until the user decided to
						cancel the chain.

A) Background and the needs:

						This program is needed because there are many securities
						that are difficult to trade because they are illiquid as
						a result of large bid and ask spreads, or because they lack 
						volume. 
						
						The goal is to reduce spreads while increasing volume.
						
						Another need is due to the fact that manually performing this task
						is laborious and prone to error.
						

B) Function list:
		
						getSecurityPrice
						setSecurityPrice
						
						setPurchasePrice
						getPurchasePrice
						
						setLiquidationPrice
						getLiquidationPrice
						
						setAvarageTrueRange
						getAverageTrueRange
						
						setBollingerBandWidth
						getBollingerBandWidth
						
						setAverageDirectionalIndex
						getAverageDirectionalIndex

C) User interface (UI) design:

				Step 1


							Trade Ticket
							============
							
							Security:			[User Input Element]
							Buy or Sell:		[User Input Element]
							Limit:				[User Input Element]
							Quantity:			[User Input Element]
							ATR:				[User Input Element]
							BBW:				[User Input Element]
							ADX:				[User Input Element]
						
				Step 2
													
								
							Your initial [Buy/Sell] Trade ticket for [Security] has been
							submitted at the following price [Limit Price] and quantity [Quantity].
							 
							Subsequent orders will be automatically generated and submitted contingent 
							upon the fulfillment of the previous order, with buy limits and sell limits 
							based on the Average True Range, Bollinger Band Width, and Average Directional
							Index entered on the initializing ticket.
							
							Sell orders will be generated with a limit of 	[Calculated Amount] above the previously filled ticket
							Buy  orders will be generated with a limit of 	[Calculated Amount] below the previously filled ticket
							
							[   User Input Element   [Accept and Submit]   [Override and Submit]   [Start Over]   ]
						
				Step 3
													
							[Ticker Symbol]		[Buy/Sell]			[Order Quantity]			[Limit Price]				[Ticket Status]
							
							[	HFH					Buy						1							86.86					Open          ]
										
				Step 4			
							[Ticker Symbol]		[Buy/Sell]			[Order Quantity]			[Limit Price]				[Ticket Status]
							
							[	HFH					Buy						1							86.86					Filled        ]
							
				Step 5		

							[Ticker Symbol]		[Buy/Sell]			[Order Quantity]			[Limit Price]				[Ticket Status]
							
							[	HFH					Sell					1							86.88					Open          ]
				
				Step 6		

							[Ticker Symbol]		[Buy/Sell]			[Order Quantity]			[Limit Price]				[Ticket Status]
							
							[	HFH					Sell					1							86.88					Filled        ]
							
				Step 7		

							[Ticker Symbol]		[Buy/Sell]			[Order Quantity]			[Limit Price]				[Ticket Status]
							
							[	HFH					Buy						1							86.85  					Open          ]
		
D) Class diagram

E) File and database design:

F) Expectations of project fulfillment:
	
	a.
	b.
	c.
	d.
	e.
	f.
	g.
	
